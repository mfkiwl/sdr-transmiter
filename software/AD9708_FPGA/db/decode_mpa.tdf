--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=13 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:04:00:SJ cbx_lpm_add_sub 2013:06:12:18:04:00:SJ cbx_lpm_compare 2013:06:12:18:04:00:SJ cbx_lpm_decode 2013:06:12:18:04:00:SJ cbx_mgl 2013:06:12:18:04:42:SJ cbx_stratix 2013:06:12:18:04:00:SJ cbx_stratixii 2013:06:12:18:04:00:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_mpa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[12..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[12..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode450w[1..0]	: WIRE;
	w_anode459w[3..0]	: WIRE;
	w_anode476w[3..0]	: WIRE;
	w_anode486w[3..0]	: WIRE;
	w_anode496w[3..0]	: WIRE;
	w_anode506w[3..0]	: WIRE;
	w_anode516w[3..0]	: WIRE;
	w_anode526w[3..0]	: WIRE;
	w_anode536w[3..0]	: WIRE;
	w_anode548w[1..0]	: WIRE;
	w_anode555w[3..0]	: WIRE;
	w_anode566w[3..0]	: WIRE;
	w_anode576w[3..0]	: WIRE;
	w_anode586w[3..0]	: WIRE;
	w_anode596w[3..0]	: WIRE;
	w_anode606w[3..0]	: WIRE;
	w_anode616w[3..0]	: WIRE;
	w_anode626w[3..0]	: WIRE;
	w_data448w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[12..0] = eq_wire[12..0];
	eq_wire[] = ( ( w_anode626w[3..3], w_anode616w[3..3], w_anode606w[3..3], w_anode596w[3..3], w_anode586w[3..3], w_anode576w[3..3], w_anode566w[3..3], w_anode555w[3..3]), ( w_anode536w[3..3], w_anode526w[3..3], w_anode516w[3..3], w_anode506w[3..3], w_anode496w[3..3], w_anode486w[3..3], w_anode476w[3..3], w_anode459w[3..3]));
	w_anode450w[] = ( (w_anode450w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode459w[] = ( (w_anode459w[2..2] & (! w_data448w[2..2])), (w_anode459w[1..1] & (! w_data448w[1..1])), (w_anode459w[0..0] & (! w_data448w[0..0])), w_anode450w[1..1]);
	w_anode476w[] = ( (w_anode476w[2..2] & (! w_data448w[2..2])), (w_anode476w[1..1] & (! w_data448w[1..1])), (w_anode476w[0..0] & w_data448w[0..0]), w_anode450w[1..1]);
	w_anode486w[] = ( (w_anode486w[2..2] & (! w_data448w[2..2])), (w_anode486w[1..1] & w_data448w[1..1]), (w_anode486w[0..0] & (! w_data448w[0..0])), w_anode450w[1..1]);
	w_anode496w[] = ( (w_anode496w[2..2] & (! w_data448w[2..2])), (w_anode496w[1..1] & w_data448w[1..1]), (w_anode496w[0..0] & w_data448w[0..0]), w_anode450w[1..1]);
	w_anode506w[] = ( (w_anode506w[2..2] & w_data448w[2..2]), (w_anode506w[1..1] & (! w_data448w[1..1])), (w_anode506w[0..0] & (! w_data448w[0..0])), w_anode450w[1..1]);
	w_anode516w[] = ( (w_anode516w[2..2] & w_data448w[2..2]), (w_anode516w[1..1] & (! w_data448w[1..1])), (w_anode516w[0..0] & w_data448w[0..0]), w_anode450w[1..1]);
	w_anode526w[] = ( (w_anode526w[2..2] & w_data448w[2..2]), (w_anode526w[1..1] & w_data448w[1..1]), (w_anode526w[0..0] & (! w_data448w[0..0])), w_anode450w[1..1]);
	w_anode536w[] = ( (w_anode536w[2..2] & w_data448w[2..2]), (w_anode536w[1..1] & w_data448w[1..1]), (w_anode536w[0..0] & w_data448w[0..0]), w_anode450w[1..1]);
	w_anode548w[] = ( (w_anode548w[0..0] & data_wire[3..3]), enable_wire);
	w_anode555w[] = ( (w_anode555w[2..2] & (! w_data448w[2..2])), (w_anode555w[1..1] & (! w_data448w[1..1])), (w_anode555w[0..0] & (! w_data448w[0..0])), w_anode548w[1..1]);
	w_anode566w[] = ( (w_anode566w[2..2] & (! w_data448w[2..2])), (w_anode566w[1..1] & (! w_data448w[1..1])), (w_anode566w[0..0] & w_data448w[0..0]), w_anode548w[1..1]);
	w_anode576w[] = ( (w_anode576w[2..2] & (! w_data448w[2..2])), (w_anode576w[1..1] & w_data448w[1..1]), (w_anode576w[0..0] & (! w_data448w[0..0])), w_anode548w[1..1]);
	w_anode586w[] = ( (w_anode586w[2..2] & (! w_data448w[2..2])), (w_anode586w[1..1] & w_data448w[1..1]), (w_anode586w[0..0] & w_data448w[0..0]), w_anode548w[1..1]);
	w_anode596w[] = ( (w_anode596w[2..2] & w_data448w[2..2]), (w_anode596w[1..1] & (! w_data448w[1..1])), (w_anode596w[0..0] & (! w_data448w[0..0])), w_anode548w[1..1]);
	w_anode606w[] = ( (w_anode606w[2..2] & w_data448w[2..2]), (w_anode606w[1..1] & (! w_data448w[1..1])), (w_anode606w[0..0] & w_data448w[0..0]), w_anode548w[1..1]);
	w_anode616w[] = ( (w_anode616w[2..2] & w_data448w[2..2]), (w_anode616w[1..1] & w_data448w[1..1]), (w_anode616w[0..0] & (! w_data448w[0..0])), w_anode548w[1..1]);
	w_anode626w[] = ( (w_anode626w[2..2] & w_data448w[2..2]), (w_anode626w[1..1] & w_data448w[1..1]), (w_anode626w[0..0] & w_data448w[0..0]), w_anode548w[1..1]);
	w_data448w[2..0] = data_wire[2..0];
END;
--VALID FILE
